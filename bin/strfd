#!/usr/bin/env ruby

require File.expand_path(File.dirname(__FILE__) + '/../lib/strftime.rb')

# If the argument appears like "%y" just output the description
# otherwise, find the format for the given date

given_date = ARGV[0]

if given_date
  test_date = given_date.dup
  possible_instructions = []
  # time zone offset 
  test_date.gsub!(/\+\d{4}/,'%z')
  # 4 digit year
  test_date.gsub!(/\d{4}/,'%Y')
  # 2 digit options
  two_digit_directives = Strftime::Directive.all.select{|d| d.example.match(/^\d{2}$/)}
  test_date.scan(/\d\d/).each do |found|
    two_digit_directives.each do |directive|
      possible_instructions << test_date.sub(Regexp.new(found),directive.key)
    end
  end
  possible_instructions << test_date if possible_instructions.empty?
  
  possible_instructions.map!{|i| %{#{i} #=> #{Time.now.strftime(i)}}}
  
  STDOUT.puts 'Using the current time as the formatting date:'
  STDOUT.puts possible_instructions.join('
')
else
  STDOUT.puts Strftime::Directive.all.sort
end